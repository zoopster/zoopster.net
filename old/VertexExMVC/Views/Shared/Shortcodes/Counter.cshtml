@model ExpressMVC.Models.Shortcodes.CounterModel
@using ExpressMVC.UI


@{
    string sizeClass = string.Empty;
    switch (Model.UIProps.Size)
    {
        case CounterSize.Default:
            sizeClass = string.Empty;
            break;
        case CounterSize.XSmall:
            sizeClass = "counters-xs";
            break;
        case CounterSize.Small:
            sizeClass = "counters-sm";
            break;
        case CounterSize.Large:
            sizeClass = "counters-lg";
            break;
        case CounterSize.XLarge:
            sizeClass = "counters-xl";
            break;
        default:
            break;
    }


    string textColorClass = string.Empty;
    switch (Model.UIProps.Color)
    {
        case ThemeColor.Default:
            textColorClass = string.Empty;
            break;
        case ThemeColor.Primary:
            textColorClass = "text-primary";
            break;
        case ThemeColor.Secondary:
            textColorClass = "text-secondary";
            break;
        case ThemeColor.Tertiary:
            textColorClass = "text-tertiary";
            break;
        case ThemeColor.Quaternary:
            textColorClass = "text-quaternary";
            break;
        case ThemeColor.Dark:
            break;
        default:
            break;
    }

}

<div class="counters @sizeClass @Model.ClassName">
    <div class="counter">
        @if (!string.IsNullOrEmpty(Model.Icon))
        {
            <i class="@Model.Icon"></i>
        }
        <strong class="@textColorClass" data-to="@Model.To" data-append="@Model.Append">0</strong>
        <label>@Model.Label</label>
    </div>
</div>