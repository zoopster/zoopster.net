@model ExpressMVC.Models.Blog.BlogListModel
@using ExpressMVC.Models.Blog;
@using PagedList.Mvc;
@using PagedList;

@{
    var blogPosts = Model.BlogPosts.ToPagedList(Model.PageNumber ?? 1, Model.PageSize);
    string columnClass = Model.UIProps.GetColumnClass();
}

<div class="row">

    @foreach (var item in blogPosts)
    {
        string url = Url.Action("Detail", "Blog", new { id = item.Id });
        <div class="@columnClass">
            <div class="card border-0 rounded shadow-sm mb-5">
                <!-- Blog Grid -->
                <article class="card-body d-flex align-items-start flex-column w-100 bg-white rounded p-5">
                    <!-- Info -->
                    <small class="d-block text-muted mb-2">May 15, 2018</small>
                    <h2 class="font-weight-bold text-4 mb-3">
                        <a class="link-color-dark" href="@url">@item.Title.Truncate(100, "...")</a>
                    </h2>
                    <p>@Html.Raw(item.Body.Truncate(100, "..."))</p>
                    <div class="w-100 mt-auto">
                        <hr>
                        <!-- Author -->
                        <div class="media">
                            <div class="d-flex mr-3">
                                <img class="u-sm-avatar rounded-circle" src="~/Content/img/avatars/a1.jpeg" alt="Image Description">
                            </div>
                            <div class="media-body">
                                <h4 class="d-inline-block mb-0">
                                    <a class="d-block text-2" href="single-article-classic.html">Andrea Gard</a>
                                </h4>
                            </div>
                        </div>
                        <!-- End Author -->
                    </div>
                </article>
                <!-- End Blog Grid -->
            </div>
        </div>
    }
</div>


@{
        var actionName = string.Empty;
        var routeValues = HttpContext.Current.Request.RequestContext.RouteData.Values;
        if (routeValues != null)
        {
            if (routeValues.ContainsKey("action"))
            {
                actionName = routeValues["action"].ToString();
            }
        }
    }

    @Html.PagedListPager(blogPosts, page => Url.Action(actionName, "Blog", new { page }))