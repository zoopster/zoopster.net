@using ExpressMVC.UI
@using ExpressMVC.Models.Shortcodes

@Html.ExpressMenu()

@Html.ExpressPageHeader(title: "Buttons")

<section class="section">

    <div class="container">
        <div class="row">
            <div class="col-md-4 col-lg-3 order-1">
                @Html.ExpressSidebar(name: "ShortcodeMenu")
            </div>

            <div class="col-md-8 col-lg-9 order-2">
                <div class="row mb-7 pb-3">
                    <div class="col-lg-6 mb-5 mb-md-0">

                        <h4>Default Buttons:</h4>
                        <hr class="mb-4">

                        @Html.ExpressButton(new ButtonModel() { Text = "Primary", Type = ButtonType.Primary })
                        @Html.ExpressButton(new ButtonModel() { Text = "Success", Type = ButtonType.Success })
                        @Html.ExpressButton(new ButtonModel() { Text = "Danger", Type = ButtonType.Danger })
                        @Html.ExpressButton(new ButtonModel() { Text = "Warning", Type = ButtonType.Warning })
                        @Html.ExpressButton(new ButtonModel() { Text = "Info", Type = ButtonType.Info })
                        @Html.ExpressButton(new ButtonModel() { Text = "Link", Type = ButtonType.Link })
                    </div>

                    <div class="col-lg-6">
                        <h4>Button Colors:</h4>
                        <hr class="mb-4">

                        @Html.ExpressButton(new ButtonModel() { Text = "Primary", Type = ButtonType.Primary })
                        @Html.ExpressButton(new ButtonModel() { Text = "Secondary", Type = ButtonType.Secondary })
                        @Html.ExpressButton(new ButtonModel() { Text = "Tertiary", Type = ButtonType.Tertiary })
                        @Html.ExpressButton(new ButtonModel() { Text = "Quaternary", Type = ButtonType.Quaternary })
                        @Html.ExpressButton(new ButtonModel() { Text = "Dark", Type = ButtonType.Dark })
                    </div>
                </div>

                <div class="row mb-7 pb-3">
                    <div class="col-lg-12">

                        <h4>Rounded Buttons:</h4>
                        <hr class="mb-4">

                        @Html.ExpressButton(new ButtonModel() { Text = "Primary", Type = ButtonType.Primary, UIProps = { IsRounded = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Success", Type = ButtonType.Success, UIProps = { IsRounded = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Danger", Type = ButtonType.Danger, UIProps = { IsRounded = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Warning", Type = ButtonType.Warning, UIProps = { IsRounded = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Info", Type = ButtonType.Info, UIProps = { IsRounded = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Secondary", Type = ButtonType.Secondary, UIProps = { IsRounded = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Tertiary", Type = ButtonType.Tertiary, UIProps = { IsRounded = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Quaternary", Type = ButtonType.Quaternary, UIProps = { IsRounded = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Dark", Type = ButtonType.Dark, UIProps = { IsRounded = true } })
                    </div>
                </div>

                <div class="row mb-7 pb-3">
                    <div class="col-lg-6 mb-5 mb-md-0">

                        <h4>Outline Buttons:</h4>
                        <hr class="mb-4">

                        @Html.ExpressButton(new ButtonModel() { Text = "Primary", Type = ButtonType.Primary, UIProps = { IsOutline = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Success", Type = ButtonType.Secondary, UIProps = { IsOutline = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Danger", Type = ButtonType.Tertiary, UIProps = { IsOutline = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Warning", Type = ButtonType.Quaternary, UIProps = { IsOutline = true } })
                    </div>
                    <div class="col-lg-6">

                        <h4>Buttons Group:</h4>
                        <hr class="mb-4">
                        <div class="btn-group btn-group-style-1">
                            <a href="#" class="btn btn-rounded btn-4 font-weight-semibold btn-primary mb-2">PRIMARY</a>
                            <a href="#" class="btn btn-outline btn-4 font-weight-semibold btn-primary align-items-center mb-2">PRIMARY <i class="fas fa-angle-right ml-2"></i></a>
                        </div>
                        <div class="btn-group">
                            <a href="#" class="btn btn-rounded btn-h-2 btn-v-3 font-weight-bold btn-primary mb-2">PRIMARY</a>
                            <a href="#" class="btn btn-rounded btn-h-1 font-weight-semibold btn-primary align-items-center line-height-1 mb-2"><strong class="font-weight-semibold position-relative text-4">$16</strong></a>
                        </div>
                    </div>
                </div>

                <div class="row mb-7 pb-3">
                    <div class="col-lg-12">

                        <h4>Buttons Sizes:</h4>
                        <hr class="mb-4">

                        @Html.ExpressButton(new ButtonModel() { Text = "Small", Type = ButtonType.Primary, UIProps = { Size = Size.Small } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Default", Type = ButtonType.Primary, UIProps = { Size = Size.Default } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Large", Type = ButtonType.Primary, UIProps = { Size = Size.Large } })

                        @Html.ExpressButton(new ButtonModel() { Text = "Small", Type = ButtonType.Primary, UIProps = { Size = Size.Small, IsOutline = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Default", Type = ButtonType.Primary, UIProps = { Size = Size.Default, IsOutline = true } })
                        @Html.ExpressButton(new ButtonModel() { Text = "Large", Type = ButtonType.Primary, UIProps = { Size = Size.Large, IsOutline = true } })
                    </div>
                </div>

                <div class="row mb-7 pb-3">
                    <div class="col-lg-6 mb-5 mb-md-0">

                        <h4>Block Buttons:</h4>
                        <hr class="mb-4">
                        @Html.ExpressButton(new ButtonModel() { Text = "BTN BLOCK", Type = ButtonType.Quaternary, UIProps = { IsBlock = true } })
                    </div>
                    <div class="col-lg-6">

                        <h4>Buttons Effects:</h4>
                        <hr class="mb-4">

                        @Html.ExpressButton(new ButtonModel() { Text = "EFFECT 1", Type = ButtonType.Primary, Icon = "lnr lnr-rocket", UIProps = { IsOutline = true, Effect = ButtonEffect.IconEffect1 } })

                        @Html.ExpressButton(new ButtonModel() { Text = "EFFECT 1", Type = ButtonType.Primary, Icon = "fas fa-ellipsis-h", UIProps = { IsOutline = true, Effect = ButtonEffect.IconEffect2 } })

                    </div>
                </div>

                <div class="row mb-7 pb-3">
                    <div class="col-lg-12">

                        <h4>Disabled Buttons:</h4>
                        <hr class="mb-4">

                        @Html.ExpressButton(new ButtonModel() { Text = "Primary", Type = ButtonType.Primary, IsDisabled = true })
                        @Html.ExpressButton(new ButtonModel() { Text = "Success", Type = ButtonType.Success, IsDisabled = true })
                        @Html.ExpressButton(new ButtonModel() { Text = "Danger", Type = ButtonType.Danger, IsDisabled = true })
                        @Html.ExpressButton(new ButtonModel() { Text = "Warning", Type = ButtonType.Warning, IsDisabled = true })
                        @Html.ExpressButton(new ButtonModel() { Text = "Info", Type = ButtonType.Info, IsDisabled = true })
                        @Html.ExpressButton(new ButtonModel() { Text = "Secondary", Type = ButtonType.Secondary, IsDisabled = true })
                        @Html.ExpressButton(new ButtonModel() { Text = "Tertiary", Type = ButtonType.Tertiary, IsDisabled = true })
                        @Html.ExpressButton(new ButtonModel() { Text = "Quaternary", Type = ButtonType.Quaternary, IsDisabled = true })
                        @Html.ExpressButton(new ButtonModel() { Text = "Dark", Type = ButtonType.Dark, IsDisabled = true })
                    </div>
                </div>

                <div class="row mb-7 pb-3">
                    <div class="col-lg-12">

                        <h4>With Icons:</h4>
                        <hr class="mb-4">

                        @Html.ExpressButton(new ButtonModel() { Text = "Primary", Type = ButtonType.Primary, Icon = Icons.FontAwesome.AddressBook })
                        @Html.ExpressButton(new ButtonModel() { Text = "Success", Type = ButtonType.Success, Icon = Icons.FontAwesome.Shower })
                        @Html.ExpressButton(new ButtonModel() { Text = "Danger", Type = ButtonType.Danger, Icon = Icons.FontAwesome.Bolt })
                        @Html.ExpressButton(new ButtonModel() { Text = "Warning", Type = ButtonType.Warning, Icon = Icons.FontAwesome.Cog })
                        @Html.ExpressButton(new ButtonModel() { Text = "Info", Type = ButtonType.Info, Icon = Icons.FontAwesome.Desktop })
                        @Html.ExpressButton(new ButtonModel() { Text = "Secondary", Type = ButtonType.Secondary, Icon = Icons.FontAwesome.Eye })
                        @Html.ExpressButton(new ButtonModel() { Text = "Tertiary", Type = ButtonType.Tertiary, Icon = Icons.FontAwesome.Fire })
                        @Html.ExpressButton(new ButtonModel() { Text = "Quaternary", Type = ButtonType.Quaternary, Icon = Icons.FontAwesome.Rocket })
                        @Html.ExpressButton(new ButtonModel() { Text = "Dark", Type = ButtonType.Dark, Icon = Icons.FontAwesome.Server })
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

@Html.ExpressFooter()